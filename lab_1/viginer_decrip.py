def vigenere_decrypt(cipher_text, key, alphabet):
    m = len(alphabet)
    cipher_text = cipher_text.lower().replace('—ë', '')
    key = key.lower().replace('—ë', '')

    full_key = (key * (len(cipher_text) // len(key) + 1))[:len(cipher_text)]

    result = ''
    print("–®–∞–≥–∏ –¥–µ—à–∏—Ñ—Ä–æ–≤–∫–∏:")

    for c_char, k_char in zip(cipher_text, full_key):
        if c_char in alphabet and k_char in alphabet:
            y = alphabet.index(c_char)
            k = alphabet.index(k_char)
            x = (y - k + m) % m
            result += alphabet[x]
            print(f"{c_char}({y}) - {k_char}({k}) = {x} ‚Üí {alphabet[x]}")
        else:
            result += c_char
            print(f"{c_char} ‚Äî –Ω–µ –∏–∑ –∞–ª—Ñ–∞–≤–∏—Ç–∞, –æ—Å—Ç–∞–≤–ª–µ–Ω –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π")

    return result

# –ê–ª—Ñ–∞–≤–∏—Ç: 32 –±—É–∫–≤—ã (–±–µ–∑ —ë)
alphabet = '–∞–±–≤–≥–¥–µ–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è'

# –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
cipher_text = input("–í–≤–µ–¥–∏—Ç–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: ")
key = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è (–∫–ª—é—á): ")

# –î–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ
decrypted = vigenere_decrypt(cipher_text, key, alphabet)
print("\nüîì –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:", decrypted)
